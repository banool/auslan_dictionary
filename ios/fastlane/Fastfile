default_platform(:ios)

xcode_select "/Applications/Xcode.app"

platform :ios do
  desc “Upload screenshots”
  lane :screenshots do
    create_keychain(
      name: ENV['MATCH_KEYCHAIN_NAME'],
      password: ENV["MATCH_KEYCHAIN_PASSWORD"],
      default_keychain: true,
      unlock: true,
      timeout: 0,
      lock_when_sleeps: false
    )
    match(
      type: "appstore",
      readonly: false,
      keychain_name: ENV['MATCH_KEYCHAIN_NAME'],
      keychain_password: ENV["MATCH_KEYCHAIN_PASSWORD"],
    )
    get_certificates
    get_provisioning_profile
    upload_to_app_store(
      skip_binary_upload: true,
      screenshots_path: "../screenshots/ios",
      overwrite_screenshots: true,
    )
  end
end

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    create_keychain(
      name: ENV['MATCH_KEYCHAIN_NAME'],
      password: ENV["MATCH_KEYCHAIN_PASSWORD"],
      default_keychain: true,
      unlock: true,
      timeout: 0,
      lock_when_sleeps: false
    )
    api_key = app_store_connect_api_key(
      key_id: "AKTDZ5L3QV",
      issuer_id: "0c2003b0-4f09-49e3-805a-66692954b229",
      key_filepath: "/Users/dport/fastlane-ios-key.p8",
      duration: 1200,
      in_house: false
    )
    match(
      type: "appstore",
      readonly: false,
      keychain_name: ENV['MATCH_KEYCHAIN_NAME'],
      keychain_password: ENV["MATCH_KEYCHAIN_PASSWORD"],
      api_key: api_key
    )
    get_certificates
    get_provisioning_profile
    build_app(
      workspace: "Runner.xcworkspace",
      scheme: "Runner",
      export_method: "app-store"
    )
    # https://github.com/flutter/flutter/issues/166367
    ipa_location = lane_context[SharedValues::IPA_OUTPUT_PATH]
    sh("unzip -l #{ipa_location} | grep ._Symbols || true")
    sh("zip -d #{ipa_location} ._Symbols/ || true")
    upload_to_testflight(api_key: api_key)
  end
end
